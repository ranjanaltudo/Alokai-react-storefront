import { ScrollableOptions, SfScrollableOnScrollData } from './types';

export default class Scrollable {
    container: HTMLElement;
    private options;
    private debounceId?;
    private dragScrollX;
    private dragScrollLeft;
    private dragScrollY;
    private dragScrollTop;
    private pointerDownOffsetLeft;
    private pointerDownOffsetTop;
    private dragDistance;
    private isDraggedPreviously;
    get isDragged(): boolean;
    set isDragged(newValue: boolean);
    constructor(container: Element, ScrollableOptions?: Partial<ScrollableOptions>);
    register(): () => void;
    private addListeners;
    prev(): void;
    next(): void;
    scrollToIndex(index: number): void;
    refresh(callback?: (data: SfScrollableOnScrollData) => void): void;
    private onMouseUp;
    private onMouseLeave;
    private onMouseDown;
    private onMouseMove;
    private scrollTo;
    private onScroll;
    private resizeObserver;
    private onScrollHandler;
    private get hasNext();
    private get hasPrev();
    private calculate;
}
//# sourceMappingURL=scrollable.d.ts.map