import { FocusableElement } from 'tabbable';

export declare const findCurrentFocusableIndex: (current: FocusableElement, focusables: FocusableElement[]) => number;
export declare const findNextFocusable: (current: FocusableElement, focusables: FocusableElement[]) => FocusableElement;
export declare const findPrevFocusable: (current: FocusableElement, focusables: FocusableElement[]) => FocusableElement;
export declare const focusFirstElement: ({ focusables, event }: {
    focusables: FocusableElement[];
    event?: KeyboardEvent;
}) => FocusableElement;
export declare const focusLastElement: ({ focusables, event }: {
    focusables: FocusableElement[];
    event?: KeyboardEvent;
}) => FocusableElement;
export declare const focusNextElement: (current: FocusableElement, focusables: FocusableElement[]) => FocusableElement;
export declare const focusPrevElement: (current: FocusableElement, focusables: FocusableElement[]) => FocusableElement;
export declare const isCurrentFirstElement: (current: FocusableElement, focusables: FocusableElement[]) => boolean;
export declare const isCurrentLastElement: (current: FocusableElement, focusables: FocusableElement[]) => boolean;
//# sourceMappingURL=utils.d.ts.map