import { jsx as n } from "react/jsx-runtime";
import D from "classnames";
import { useRef as x } from "react";
import { useClickAway as y } from "react-use";
import { mergeRefs as R } from "../../shared/utils/refs.mjs";
import { SfDrawerPlacement as f } from "@storefront-ui/shared";
import { polymorphicForwardRef as b } from "../../shared/utils/index.mjs";
const h = "aside", S = (r) => ({
  "left-0": r !== f.right,
  "right-0": r !== f.left,
  "top-0": r !== f.bottom,
  "bottom-0": r !== f.top
}), k = b(
  ({
    as: r,
    open: a,
    placement: m = f.left,
    disableClickAway: i,
    disableEsc: o,
    onClose: t,
    className: s,
    children: c,
    ...p
  }, d) => {
    const w = r || h, e = x(null);
    y(e, () => {
      i || t == null || t();
    });
    const u = (g) => {
      o || g.key === "Escape" && (t == null || t());
    };
    return a ? /* @__PURE__ */ n(
      w,
      {
        ref: R([e, d]),
        className: D("fixed", S(m), s),
        tabIndex: "-1",
        "data-testid": "drawer",
        ...p,
        onKeyDown: u,
        children: c
      }
    ) : null;
  }
), I = k;
export {
  I as default
};
