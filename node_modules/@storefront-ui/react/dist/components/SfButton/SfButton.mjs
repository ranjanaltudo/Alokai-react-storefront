import { jsxs as g } from "react/jsx-runtime";
import y from "classnames";
import { SfButtonVariant as e, SfButtonSize as i } from "@storefront-ui/shared";
import { polymorphicForwardRef as u } from "../../shared/utils/index.mjs";
const f = "button", h = {
  [e.primary]: "text-white shadow hover:shadow-md active:shadow bg-primary-700 hover:bg-primary-800 active:bg-primary-900 disabled:bg-disabled-300",
  [e.secondary]: "text-primary-700 hover:bg-primary-100 hover:text-primary-800 active:bg-primary-200 active:text-primary-900 ring-1 ring-inset ring-primary-700 hover:shadow-md active:shadow shadow hover:ring-primary-800 active:ring-primary-900 disabled:ring-1 disabled:ring-disabled-300 disabled:bg-white/50",
  [e.tertiary]: "text-primary-700 hover:bg-primary-100 hover:text-primary-800 active:bg-primary-200 active:text-primary-900 disabled:bg-transparent"
}, v = (r, t) => {
  switch (r) {
    case i.sm:
      return [t ? "p-1.5" : "leading-5 text-sm py-1.5 px-3", "gap-1.5"];
    case i.lg:
      return [t ? "p-4" : "py-3 leading-6 px-6", "gap-3"];
    default:
      return [t ? "p-2" : "py-2 leading-6 px-4", "gap-2"];
  }
}, x = u((r, t) => {
  const {
    as: s,
    className: o,
    size: d = i.base,
    variant: n = e.primary,
    square: p,
    children: l,
    slotPrefix: m,
    slotSuffix: b,
    ...c
  } = r, a = s || f;
  return /* @__PURE__ */ g(
    a,
    {
      ref: t,
      type: typeof a == "string" && a.toLowerCase() === "button" ? "button" : void 0,
      className: y(
        "inline-flex items-center justify-center font-medium text-base focus-visible:outline focus-visible:outline-offset rounded-md disabled:text-disabled-500 disabled:bg-disabled-300 disabled:shadow-none disabled:ring-0 disabled:cursor-not-allowed",
        v(d, p),
        h[n],
        o
      ),
      "data-testid": "button",
      ...c,
      children: [
        m,
        l,
        b
      ]
    }
  );
}), C = x;
export {
  C as default
};
