import { jsxs as d, jsx as c } from "react/jsx-runtime";
import { useState as j } from "react";
import r from "classnames";
import { SfSelectSize as e } from "@storefront-ui/shared";
import z from "../SfIcons/SfIconExpandMore.mjs";
import { useFocusVisible as B } from "../../hooks/useFocusVisible/useFocusVisible.mjs";
import { composeHandlers as o } from "../../shared/utils/props.mjs";
function I(u) {
  const {
    size: t = e.base,
    children: p,
    invalid: m,
    wrapperClassName: b,
    slotChevron: f,
    required: g,
    disabled: n,
    className: h,
    placeholder: a,
    onBlur: x,
    onChange: v,
    onClick: y,
    onKeyDown: w,
    ...S
  } = u, { isFocusVisible: C } = B(), [N, s] = j(!1), i = () => s(!0), l = () => s(!1), k = (D) => {
    D.code === "Space" && i();
  };
  return /* @__PURE__ */ d(
    "span",
    {
      className: r(
        "relative flex flex-col rounded-md",
        {
          "focus-within:outline focus-within:outline-offset": C
        },
        b
      ),
      "data-testid": "select",
      children: [
        /* @__PURE__ */ d(
          "select",
          {
            required: g,
            disabled: n,
            className: r(
              "appearance-none disabled:cursor-not-allowed cursor-pointer pl-4 pr-3.5 text-neutral-900 focus:ring-primary-700 focus:ring-2 outline-none bg-transparent rounded-md ring-1 ring-inset ring-neutral-300 hover:ring-primary-700 active:ring-2 active:ring-primary-700 disabled:bg-disabled-100 disabled:text-disabled-900 disabled:ring-disabled-200",
              {
                "py-1.5": t === e.sm,
                "py-2": t === e.base,
                "py-3 text-base": t === e.lg,
                "!ring-negative-700 ring-2": m && !n
              },
              h
            ),
            "data-testid": "select-input",
            onBlur: o(l, x),
            onChange: o(l, v),
            onClick: o(i, y),
            onKeyDown: o(k, w),
            ...S,
            children: [
              a && /* @__PURE__ */ c(
                "option",
                {
                  disabled: !0,
                  selected: !0,
                  hidden: !0,
                  value: "",
                  className: r("bg-neutral-300 text-sm", {
                    "text-base": t === e.lg
                  }),
                  "data-testid": "select-placeholder",
                  children: a
                }
              ),
              p
            ]
          }
        ),
        f || /* @__PURE__ */ c(
          z,
          {
            className: r(
              "box-border absolute -translate-y-1 pointer-events-none top-1/3 right-4 transition easy-in-out duration-0.5",
              n ? "text-disabled-500" : "text-neutral-500",
              { "rotate-180": N }
            )
          }
        )
      ]
    }
  );
}
export {
  I as default
};
