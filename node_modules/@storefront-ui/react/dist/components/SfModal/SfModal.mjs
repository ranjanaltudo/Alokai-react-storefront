"use client";
import { jsx as s } from "react/jsx-runtime";
import w from "classnames";
import { useRef as y } from "react";
import { useClickAway as x } from "react-use";
import { useTrapFocus as g } from "../../hooks/useTrapFocus/useTrapFocus.mjs";
import { polymorphicForwardRef as F } from "../../shared/utils/index.mjs";
import { mergeRefs as h } from "../../shared/utils/refs.mjs";
const D = "div", j = F(
  ({ as: m, open: e, disableClickAway: n, disableEsc: t, onClose: r, className: d, children: c, ...o }, l) => {
    const p = m || D, a = y(null);
    x(a, () => {
      n || r == null || r();
    });
    const u = (f) => {
      var i;
      if (!t && f.key === "Escape" && (r == null || r()), "onKeyDown" in o && typeof o.onKeyDown == "function") return (i = o.onKeyDown) == null ? void 0 : i.call(o, f);
    };
    return g(a, {
      trapTabs: !0,
      activeState: e,
      initialFocus: !1,
      initialFocusContainerFallback: !0
    }), e ? /* @__PURE__ */ s(
      p,
      {
        ref: h([a, l]),
        className: w(
          "fixed inset-0 w-fit h-fit m-auto p-6 pt-10 lg:p-10 border border-neutral-100 bg-white shadow-xl rounded-xl outline-none",
          d
        ),
        tabIndex: "-1",
        "aria-modal": "true",
        "data-testid": "modal",
        ...o,
        onKeyDown: u,
        children: c
      }
    ) : null;
  }
);
export {
  j as default
};
