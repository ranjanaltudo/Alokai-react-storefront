import { jsx as s } from "react/jsx-runtime";
import w from "classnames";
import { useRef as y } from "react";
import { useClickAway as x } from "react-use";
import { useTrapFocus as g } from "../../hooks/useTrapFocus/useTrapFocus.mjs";
import { polymorphicForwardRef as F } from "../../shared/utils/index.mjs";
import { mergeRefs as h } from "../../shared/utils/refs.mjs";
const D = "div", K = F(
  ({ as: m, open: f, disableClickAway: n, disableEsc: t, onClose: o, className: d, children: c, ...r }, l) => {
    const p = m || D, a = y(null);
    x(a, () => {
      n || o == null || o();
    });
    const u = (e) => {
      var i;
      if (!t && e.key === "Escape" && (o == null || o()), "onKeyDown" in r && typeof r.onKeyDown == "function")
        return (i = r.onKeyDown) == null ? void 0 : i.call(r, e);
    };
    return g(a, {
      trapTabs: !0,
      activeState: f,
      initialFocus: !1,
      initialFocusContainerFallback: !0
    }), f ? /* @__PURE__ */ s(
      p,
      {
        ref: h([a, l]),
        className: w(
          "fixed inset-0 w-fit h-fit m-auto p-6 pt-10 lg:p-10 border border-neutral-100 bg-white shadow-xl rounded-xl outline-none",
          d
        ),
        tabIndex: "-1",
        "aria-modal": "true",
        "data-testid": "modal",
        ...r,
        onKeyDown: u,
        children: c
      }
    ) : null;
  }
), v = K;
export {
  v as default
};
