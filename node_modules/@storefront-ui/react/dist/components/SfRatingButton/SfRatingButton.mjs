"use client";
import { jsx as s, jsxs as N } from "react/jsx-runtime";
import { useState as y } from "react";
import M from "classnames";
import { SfRatingButtonSize as o, SfIconSize as n } from "@storefront-ui/shared";
import F from "../SfIcons/SfIconStarFilled.mjs";
import H from "../SfIcons/SfIconStar.mjs";
function j(t) {
  return `${t} Star${t !== 1 ? "s" : ""}`;
}
const B = ({ isFilled: t, iconSize: r }) => t ? /* @__PURE__ */ s(
  F,
  {
    role: "none",
    className: "text-primary-700 cursor-pointer peer-disabled:cursor-default peer-disabled:text-disabled-500 peer-focus-visible:outline",
    size: r
  }
) : /* @__PURE__ */ s(
  H,
  {
    role: "none",
    className: "text-neutral-500 cursor-pointer peer-disabled:cursor-default peer-disabled:text-disabled-500 peer-focus-visible:outline",
    size: r
  }
), L = {
  [o.sm]: n.base,
  [o.base]: n.lg,
  [o.lg]: n.xl
};
function E({
  onChange: t,
  value: r = 0,
  disabled: i = !1,
  max: l = 5,
  name: f = "sf-rating-button",
  className: d,
  size: u = o.base,
  getLabelText: m = j,
  children: p = B,
  ...b
}) {
  const [a, c] = y(0), S = Array.from({ length: Math.floor(Math.abs(l)) }, (e, I) => I + 1), x = (e) => e <= a || a === 0 && e <= r, h = (e) => {
    t == null || t(Number(e.target.value));
  }, v = (e) => () => {
    i || c(e);
  }, z = () => {
    i || c(0);
  };
  return /* @__PURE__ */ s("div", { role: "radiogroup", className: M("flex", d), "data-testid": "ratingbutton", ...b, children: S.map((e) => /* @__PURE__ */ N("label", { onMouseEnter: v(e), onMouseLeave: z, children: [
    /* @__PURE__ */ s(
      "input",
      {
        type: "radio",
        name: f,
        value: e,
        checked: e === r,
        onChange: h,
        disabled: i,
        "aria-label": m(e),
        className: "sr-only peer"
      }
    ),
    p({ isFilled: x(e), max: l, iconSize: L[u] })
  ] }, e)) });
}
export {
  E as default
};
